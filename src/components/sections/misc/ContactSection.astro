---
// Import the necessary dependencies.
import AuthBtn from "@components/ui/buttons/AuthBtn.astro";
import ContactIconBlock from "@components/ui/blocks/ContactIconBlock.astro";
import TextInput from "@components/ui/forms/input/TextInput.astro";
import EmailContactInput from "@components/ui/forms/input/EmailContactInput.astro";
import PhoneInput from "@components/ui/forms/input/PhoneInput.astro";
import TextAreaInput from "@components/ui/forms/input/TextAreaInput.astro";
import Icon from "@components/ui/icons/Icon.astro";

// Define the variables that will be used in this component
const title: string = "Contáctanos";
const subTitle: string =
  "Contáctanos para cualquier consulta, comentario o soporte. ¡Estamos aquí para ayudarte!";
const formTitle: string = "Envíanos un mensaje";
const formSubTitle: string =
  "Generalemente respondemos en un plazo de 24 horas.";
---

<!-- Contact Us -->
<section class="mx-auto max-w-[85rem] px-4 py-10 sm:px-6 lg:px-8 lg:py-14">
  <div class="mx-auto max-w-2xl lg:max-w-5xl">
    <div class="text-center">
      <h1
        class="text-balance font-header text-2xl font-bold tracking-tight text-neutral-800 dark:text-neutral-200 md:text-4xl md:leading-tight"
      >
        {title}
      </h1>
      <p class="mt-1 text-pretty text-neutral-600 dark:text-neutral-400">
        {subTitle}
      </p>
    </div>

    <div class="mt-12 grid items-center gap-6 lg:grid-cols-2 lg:gap-16">
      <div class="flex flex-col rounded-xl p-4 sm:p-6 lg:p-8">
        <h2
          class="mb-8 text-xl font-bold text-neutral-700 dark:text-neutral-300"
        >
          {formTitle}
        </h2>
        <!-- Form for user input with various input fields.-->
        <!-- Each field utilizes a different input component for the specific type of input (text, email, phone, and textarea)-->
        <form id="contactForm">
          <div class="grid gap-4">
            <div class="grid grid-cols-1 gap-4 sm:grid-cols-2">
              <TextInput
                id="hs-firstname-contacts"
                label="Nombre"
                name="hs-firstname-contacts"
              />
              <TextInput
                id="hs-lastname-contacts"
                label="Apellido"
                name="hs-lastname-contacts"
              />
            </div>
            <EmailContactInput id="hs-email-contacts" />
            <PhoneInput id="hs-phone-number" />
            <TextAreaInput
              id="hs-about-contacts"
              label="Mensaje"
              name="hs-about-contacts"
            />
          </div>

          <div class="mt-4 grid">
            <AuthBtn title="Enviar" />
          </div>

          <div class="mt-3 text-center">
            <p class="text-sm text-neutral-600 dark:text-neutral-400">
              {formSubTitle}
            </p>
          </div>
          <div class="error">
            <p id="error" class="text-red-500"></p>
          </div>
        </form>
      </div>

      <!--ContactIconBlocks are used to display different methods of contacting, including visiting office, email, browsing knowledgebase, and FAQ.-->
      <div class="divide-y divide-neutral-300 dark:divide-neutral-700">
        <ContactIconBlock
          heading="Whatsapp"
          content="Envíanos un mensaje por Whatsapp"
          isLinkVisible={true}
          linkTitle="Conectar"
          linkURL="https://api.whatsapp.com/send/?phone=56968406912&text=Hola,%20me%20gustar%C3%ADa%20&type=phone_number&app_absent=0"
          isArrowVisible={true}
          ><Icon name="whatsapp" />
        </ContactIconBlock>

        <ContactIconBlock
          heading="Visita nuestra oficina"
          content="Fuix SpA"
          isAddressVisible={true}
          addressContent="El Trovador 4285, Las Condes, Santiago, Chile"
          ><Icon name="mapPin" />
        </ContactIconBlock>

        <ContactIconBlock
          heading="Contáctanos por email"
          content="Envíanos un correo electrónico"
          isLinkVisible={true}
          linkTitle="contacto@fuix.cl"
          linkURL="mailto:contacto@fuix.cl"
          ><Icon name="envelopeOpen" />
        </ContactIconBlock>
      </div>
    </div>
  </div>
</section>
<script>
  const localUrl = window.location.href;
  const contactForm = document.getElementById("contactForm");
  if (contactForm) {
    contactForm.addEventListener("submit", async (event) => {
      event.preventDefault();
      const errorDiv = document.getElementById("error");
      const formDiv = document.getElementById("contactForm");
      if (errorDiv) {
        errorDiv.textContent = "";
      }

      const formData = new FormData(event.target as HTMLFormElement);
      let dataFormatted = Object.fromEntries(formData.entries());
      dataFormatted.service = localUrl;
      dataFormatted.message = dataFormatted["hs-about-contacts"];
      dataFormatted.name = `${dataFormatted["hs-firstname-contacts"]} ${dataFormatted["hs-lastname-contacts"]}`;
      dataFormatted.email = dataFormatted["hs-email-contacts"];

      const data = {
        service: dataFormatted.service,
        message: dataFormatted.message,
        name: dataFormatted.name,
        email: dataFormatted.email,
      };

      try {
        const response = await fetch(
          "https://eoc0a86hmx5it7a.m.pipedream.net",
          {
            method: "POST",
            headers: { "Content-Type": "application/json" },
            body: JSON.stringify(data),
          }
        );

        if (response.ok) {
          if (formDiv) {
            formDiv.remove();
          }
          window.location.href = "/thank-you";
        } else {
          if (errorDiv) {
            errorDiv.textContent = "Failed to submit the form.";
          }
        }
      } catch (error) {
        if (errorDiv) {
          errorDiv.textContent = "An error occurred while submitting the form.";
        }
      }
    });
  }
</script>
